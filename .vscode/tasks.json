{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "1a. MGT SSO login for deployment",
      "type": "shell",
      "command": "aws sso login --profile hem-mgt --no-browser"
    },
    {
      "label": "1b. Dev SSO login for running in cloud",
      "type": "shell",
      "command": "aws sso login --profile hem-dev --no-browser"
    },
    {
      "label": "2a. Build HEMLambdaFunction",
      "type": "shell",
      // This might be needed if build dependencies (like Python) not installed on your machine
      // "command": "sam build --use-container --cached"
      "command": "sam build"
    },
    {
      "label": "2b. Build DynamoStreamOrchestratorFunction",
      "type": "shell",
      // This might be needed if build dependencies (like Python) not installed on your machine
      // "command": "sam build --use-container --cached"
      "command": "sam build --template dynamo_stream_orchestrator.yaml"
    },
    {
      "label": "3. Run Lambda local endpoint",
      "type": "shell",
      "command": [
        "sam",
        "local",
        "start-lambda",
        "--profile",
        "hem-mgt",
        "--debug-port",
        // Must be the same as the port in the .vscode/launch.json debug configuration
        "3488",
        "--warm-containers",
        "EAGER",
        "--debug",
        "--debug-function",
        "HEMLambdaFunction"
      ]
    },
    {
      "label": "4a. Invoke Lambda local endpoint",
      "type": "shell",
      "command": [
        "aws",
        "lambda",
        "invoke",
        "--function-name",
        "HEMLambdaFunction",
        "--endpoint-url",
        "http://127.0.0.1:3001",
        "--payload",
        "file://hem_eval_function/hem/test/demo_files/core/demo.json",
        "--no-verify-ssl",
        "--profile",
        "hem-mgt",
        "--no-cli-pager",
        "--cli-binary-format",
        "raw-in-base64-out",
        "/dev/stdout"
      ]
    },
    {
      "label": "4b. Invoke DynamoStreamOrchestratorFunction directly",
      "type": "shell",
      "command": "sam local invoke DynamoStreamOrchestratorFunction --event dynamo_stream_orchestrator/test_stream_event.json --profile hem-dev --template dynamo_stream_orchestrator.yaml"
    },
    {
      "label": "5. Login to MGT ECR",
      "type": "shell",
      "command": [
        "aws",
        "ecr",
        "get-login-password",
        "--region",
        "eu-west-2",
        "--profile",
        "hem-mgt",
        "|",
        "docker",
        "login",
        "--username",
        "AWS",
        "--password-stdin",
        "317467111462.dkr.ecr.eu-west-2.amazonaws.com/hem-lambda-image-repository"
      ]
    },
    {
      "label": "6a. Upload HEMLambdaFunction image to MGT ECR",
      "type": "shell",
      "command": [
        "sam",
        "package",
        "--image-repository",
        "317467111462.dkr.ecr.eu-west-2.amazonaws.com/hem-lambda-image-repository",
        "--profile",
        "hem-mgt"
      ]
    },
    {
      "label": "6b. Upload DynamoStreamOrchestratorFunction zip to MGT S3",
      "type": "shell",
      "command": "sam package --s3-bucket hem-build-artifacts --s3-prefix dynamo-stream-orchestrator-lambda-zips --profile hem-mgt --template dynamo_stream_orchestrator.yaml"
    },
    {
      "label": "7. Invoke HEMLambdaFunction in dev",
      "type": "shell",
      "command": [
        "aws",
        "lambda",
        "invoke",
        "--function-name",
        "hem-lambda-function",
        "--payload",
        "file://hem_eval_function/hem/test/demo_files/core/demo.json",
        "--profile",
        "hem-dev",
        "--no-cli-pager",
        "--cli-binary-format",
        "raw-in-base64-out",
        "/dev/stdout"
      ]
    }
  ]
}
